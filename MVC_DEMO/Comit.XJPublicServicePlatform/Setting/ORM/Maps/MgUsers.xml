<?xml version="1.0" encoding="utf-8" ?>
<!--
** 作者：李鸿庭
** 时间：2014-07-25 14:39:17
** 描述：mg_users(用户信息
   
   登录密码：按)表的sqlmap(自动生成 )
-->
<sqlMap namespace="MgUsers" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  	<!--别名-->
  	<alias>
    	<typeAlias alias="MgUsers" type="Comit.XJPublicServicePlatform.Web.Domain.Management.MgUsers, Comit.XJPublicServicePlatform.Web.Domain" />
  	</alias>
	<!--缓存模型-->
  	<cacheModels>
    	<cacheModel id="MgUsersCache" implementation="MEMORY">
      		<flushInterval hours="24"/>
      		<flushOnExecute statement="MgUsers.AddMgUsers"/>
      		<flushOnExecute statement="MgUsers.UpdateMgUsers"/>
      		<flushOnExecute statement="MgUsers.DeleteMgUsers"/>
      		<flushOnExecute statement="MgUsers.DeleteMgUserss"/>
      		<property name="Type" value="WEAK"/>
  		</cacheModel>
  	</cacheModels>
  	<!--字段映射-->
  	<resultMaps>
  		<resultMap id="MgUsersResult" class="MgUsers">
			<result property="Id" column="id"/>    
			<result property="OrgId" column="org_id"/>    
			<result property="UserCode" column="user_code"/>    
			<result property="UserName" column="user_name"/>    
			<result property="Password" column="password"/>    
			<result property="Sex" column="sex"/>    
			<result property="TelePhone" column="tele_phone"/>    
			<result property="MobilePhone" column="mobile_phone"/>    
			<result property="Email" column="email"/>    
			<result property="KeyPassword" column="key_password"/>    
			<result property="KeyCode" column="key_code"/>    
			<result property="CreateTime" column="create_time"/>    
			<result property="UpdateTime" column="update_time"/>    
			<result property="UserType" column="user_type"/>    
			<result property="Status" column="status"/>    
			<result property="Quarters" column="quarters"/>    
			<result property="UserDuty" column="user_duty"/>    
			<result property="UserFax" column="user_fax"/>    
			<result property="OperatePerson" column="operate_person"/>    
			<result property="OperateTime" column="operate_time"/>    
			<result property="OperateType" column="operate_type"/>    
			<result property="BackUp1" column="back_up1"/>    
			<result property="BackUp2" column="back_up2"/>    
			<result property="BackUp3" column="back_up3"/>    
			<result property="BackUp4" column="back_up4"/>    
			<result property="BackUp5" column="back_up5"/>    
		</resultMap>
  	</resultMaps>
  	<statements>
  		<!--新增-->
    	<insert id="AddMgUsers" parameterClass="MgUsers">
           INSERT INTO mg_users (id,org_id,user_code,user_name,password,sex,tele_phone,mobile_phone,email,key_password,key_code,create_time,update_time,user_type,status,quarters,user_duty,user_fax,operate_person,operate_time,operate_type,back_up1,back_up2,back_up3,back_up4,back_up5) 
           VALUES (null, #OrgId#,#UserCode#,#UserName#,#Password#,#Sex#,#TelePhone#,#MobilePhone#,#Email#,#KeyPassword#,#KeyCode#,#CreateTime#,#UpdateTime#,#UserType#,#Status#,#Quarters#,#UserDuty#,#UserFax#,#OperatePerson#,#OperateTime#,#OperateType#,#BackUp1#,#BackUp2#,#BackUp3#,#BackUp4#,#BackUp5#) 

              <!--插入数据之后，model对象的主属性得到自增主键的新值-->
                    <selectKey resultClass="long" type="post" property="Id">
             SELECT @@IDENTITY AS value
           </selectKey>

         </insert>
    	<!--修改-->
         <update id="UpdateMgUsers" parameterClass="MgUsers">
           UPDATE mg_users SET org_id = #OrgId#,user_code = #UserCode#,user_name = #UserName#,password = #Password#,sex = #Sex#,tele_phone = #TelePhone#,mobile_phone = #MobilePhone#,email = #Email#,key_password = #KeyPassword#,key_code = #KeyCode#,create_time = #CreateTime#,update_time = #UpdateTime#,user_type = #UserType#,status = #Status#,quarters = #Quarters#,user_duty = #UserDuty#,user_fax = #UserFax#,operate_person = #OperatePerson#,operate_time = #OperateTime#,operate_type = #OperateType#,back_up1 = #BackUp1#,back_up2 = #BackUp2#,back_up3 = #BackUp3#,back_up4 = #BackUp4#,back_up5 = #BackUp5#  
           WHERE id = #Id#
         </update> 
         <!--根据条件语句whereSql获取所有对象-->
         <select id="GetAllMgUsersBySql" resultMap="MgUsersResult" parameterClass="string"  cacheModel="MgUsersCache">
           SELECT id,org_id,user_code,user_name,password,sex,tele_phone,mobile_phone,email,key_password,key_code,create_time,update_time,user_type,status,quarters,user_duty,user_fax,operate_person,operate_time,operate_type,back_up1,back_up2,back_up3,back_up4,back_up5  
           FROM mg_users
           $whereSql$ 
         </select>
    	<!--获取多条-->
    	<select id="GetMgUserss" resultMap="MgUsersResult" parameterClass="MgUsers" cacheModel="MgUsersCache">
        select mg_users.id,mg_users.org_id,mg_users.user_code,mg_users.user_name,mg_users.password,mg_users.sex,mg_users.tele_phone,mg_users.mobile_phone,mg_users.email,mg_users.key_password,mg_users.key_code,mg_users.create_time,mg_users.update_time,mg_users.user_type,mg_users.status,mg_users.quarters,mg_users.user_duty,mg_users.user_fax,mg_users.operate_person,mg_users.operate_time,mg_users.operate_type,mg_users.back_up1,mg_users.back_up2,mg_users.back_up3,mg_users.back_up4,mg_users.back_up5
        from mg_users
        where 1=1 and operate_type!='Disuse'
        <include refid="WhrClauseEqual" />
    	</select>
    	<!--获取多条-->
		<select id="FindMgUserss" resultMap="MgUsersResult" parameterClass="Hashtable" cacheModel="MgUsersCache">
        	select mg_users.id,mg_users.org_id,mg_users.user_code,mg_users.user_name,mg_users.password,mg_users.sex,mg_users.tele_phone,mg_users.mobile_phone,mg_users.email,mg_users.key_password,mg_users.key_code,mg_users.create_time,mg_users.update_time,mg_users.user_type,mg_users.status,mg_users.quarters,mg_users.user_duty,mg_users.user_fax,mg_users.operate_person,mg_users.operate_time,mg_users.operate_type,mg_users.back_up1,mg_users.back_up2,mg_users.back_up3,mg_users.back_up4,mg_users.back_up5
        	from mg_users
        	where 1=1
        	<include refid="WhrClauseEqual" />
          	<isNotEmpty property="Extends" prepend="and">
            	<iterate property="Extends" conjunction="or" open="(" close=")">
              		(1=1 and mg_users.ID=#Extends[].Id#)
            	</iterate>
          	</isNotEmpty>
      	</select>
    	<!--删除-->
    	<delete id="DeleteMgUsers" parameterClass="MgUsers">
      		UPDATE mg_users  SET operate_type = 'Disuse'
      		where 1=1
      		<include refid="WhrClauseEqual" />
    	</delete>
         <!--根据条件语句whereSql批量删除-->
         <delete id="BatchDeleteMgUsersBySql" parameterClass="string">
           UPDATE mg_users  SET operate_type = 'Disuse'
           $whereSql$
         </delete>
    	<!--删除多条-->
    	<delete id="DeleteMgUserss" parameterClass="List">
      		UPDATE mg_users  SET operate_type = 'Disuse'
      		where 1!=1
      		<iterate prepend="or" conjunction="," open="ID IN(" close=")">
        		$[]$
      		</iterate>
    	</delete>
    	<!--模糊查询条件-->
    	<sql id="WhrClauseLike">
			<dynamic>
				<isNotNull property="Id">
					<isGreaterEqual property="Id" compareValue="0" prepend="and">
						mg_users.id=#Id#
					</isGreaterEqual>
				</isNotNull>		
				<isNotEmpty property="CreateTime">
					<!--同一天-->
					<isNotEqual property="CreateTime" compareValue="1900-01-01" prepend="and">
						mg_users.create_time = #CreateTime#
					</isNotEqual>
				</isNotEmpty>			
				<isNotEmpty property="UpdateTime">
					<!--同一天-->
					<isNotEqual property="UpdateTime" compareValue="1900-01-01" prepend="and">
						mg_users.update_time = #UpdateTime#
					</isNotEqual>
				</isNotEmpty>			
				<isNotEmpty property="OperateTime">
					<!--同一天-->
					<isNotEqual property="OperateTime" compareValue="1900-01-01" prepend="and">
						mg_users.operate_time = #OperateTime#
					</isNotEqual>
				</isNotEmpty>			
			</dynamic>
    	</sql>
    	<!--精确查询条件-->
    	<sql id="WhrClauseEqual">
			<dynamic>
				<isNotNull property="Id">
					<isGreaterEqual property="Id" compareValue="0" prepend="and">
						mg_users.id=#Id#
					</isGreaterEqual>
				</isNotNull>		
				<isNotEmpty property="OrgId" prepend="and">
					UPPER(mg_users.org_id)=UPPER(#OrgId#)
				</isNotEmpty>	
				<isNotEmpty property="UserCode" prepend="and">
					UPPER(mg_users.user_code)=UPPER(#UserCode#)
				</isNotEmpty>	
				<isNotEmpty property="UserName" prepend="and">
					UPPER(mg_users.user_name)=UPPER(#UserName#)
				</isNotEmpty>	
				<isNotEmpty property="Password" prepend="and">
					UPPER(mg_users.password)=UPPER(#Password#)
				</isNotEmpty>	
				<isNotEmpty property="Sex" prepend="and">
					UPPER(mg_users.sex)=UPPER(#Sex#)
				</isNotEmpty>	
				<isNotEmpty property="TelePhone" prepend="and">
					UPPER(mg_users.tele_phone)=UPPER(#TelePhone#)
				</isNotEmpty>	
				<isNotEmpty property="MobilePhone" prepend="and">
					UPPER(mg_users.mobile_phone)=UPPER(#MobilePhone#)
				</isNotEmpty>	
				<isNotEmpty property="Email" prepend="and">
					UPPER(mg_users.email)=UPPER(#Email#)
				</isNotEmpty>	
				<isNotEmpty property="KeyPassword" prepend="and">
					UPPER(mg_users.key_password)=UPPER(#KeyPassword#)
				</isNotEmpty>	
				<isNotEmpty property="KeyCode" prepend="and">
					UPPER(mg_users.key_code)=UPPER(#KeyCode#)
				</isNotEmpty>	
				<isNotEmpty property="CreateTime">
					<!--同一天-->
					<isNotEqual property="CreateTime" compareValue="1900-01-01" prepend="and">
						mg_users.create_time = #CreateTime#
					</isNotEqual>
				</isNotEmpty>			
				<isNotEmpty property="UpdateTime">
					<!--同一天-->
					<isNotEqual property="UpdateTime" compareValue="1900-01-01" prepend="and">
						mg_users.update_time = #UpdateTime#
					</isNotEqual>
				</isNotEmpty>			
				<isNotEmpty property="UserType" prepend="and">
					UPPER(mg_users.user_type)=UPPER(#UserType#)
				</isNotEmpty>	
				<isNotEmpty property="Status" prepend="and">
					UPPER(mg_users.status)=UPPER(#Status#)
				</isNotEmpty>	
				<isNotEmpty property="Quarters" prepend="and">
					UPPER(mg_users.quarters)=UPPER(#Quarters#)
				</isNotEmpty>	
				<isNotEmpty property="UserDuty" prepend="and">
					UPPER(mg_users.user_duty)=UPPER(#UserDuty#)
				</isNotEmpty>	
				<isNotEmpty property="UserFax" prepend="and">
					UPPER(mg_users.user_fax)=UPPER(#UserFax#)
				</isNotEmpty>	
				<isNotEmpty property="OperatePerson" prepend="and">
					UPPER(mg_users.operate_person)=UPPER(#OperatePerson#)
				</isNotEmpty>	
				<isNotEmpty property="OperateTime">
					<!--同一天-->
					<isNotEqual property="OperateTime" compareValue="1900-01-01" prepend="and">
						mg_users.operate_time = #OperateTime#
					</isNotEqual>
				</isNotEmpty>			
				<isNotEmpty property="OperateType" prepend="and">
					UPPER(mg_users.operate_type)=UPPER(#OperateType#)
				</isNotEmpty>	
				<isNotEmpty property="BackUp1" prepend="and">
					UPPER(mg_users.back_up1)=UPPER(#BackUp1#)
				</isNotEmpty>	
				<isNotEmpty property="BackUp2" prepend="and">
					UPPER(mg_users.back_up2)=UPPER(#BackUp2#)
				</isNotEmpty>	
				<isNotEmpty property="BackUp3" prepend="and">
					UPPER(mg_users.back_up3)=UPPER(#BackUp3#)
				</isNotEmpty>	
				<isNotEmpty property="BackUp4" prepend="and">
					UPPER(mg_users.back_up4)=UPPER(#BackUp4#)
				</isNotEmpty>	
				<isNotEmpty property="BackUp5" prepend="and">
					UPPER(mg_users.back_up5)=UPPER(#BackUp5#)
				</isNotEmpty>	
			</dynamic>
    	</sql>
  	</statements>
</sqlMap>
