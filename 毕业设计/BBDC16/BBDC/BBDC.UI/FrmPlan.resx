<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB6
        FAAAAk1TRnQBSQFMAwEBAAHIAQAByAEAAUABAAFAAQAE/wEJAQAI/wFCAU0BNgEEBgABNgEEAgABKAQA
        AQECAAFAAwABAQEAAQgGAAFAGAABgAIAAYADAAKAAQABgAMAAYABAAGAAQACgAIAA8ABAAHAAdwBwAEA
        AfABygGmAQABMwUAATMBAAEzAQABMwEAAjMCAAMWAQADHAEAAyIBAAMpAQADVQEAA00BAANCAQADOQEA
        AYABfAH/AQACUAH/AQABkwEAAdYBAAH/AewBzAEAAcYB1gHvAQAB1gLnAQABkAGpAa0CAAH/ATMDAAFm
        AwABmQMAAcwCAAEzAwACMwIAATMBZgIAATMBmQIAATMBzAIAATMB/wIAAWYDAAFmATMCAAJmAgABZgGZ
        AgABZgHMAgABZgH/AgABmQMAAZkBMwIAAZkBZgIAApkCAAGZAcwCAAGZAf8CAAHMAwABzAEzAgABzAFm
        AgABzAGZAgACzAIAAcwB/wIAAf8BZgIAAf8BmQIAAf8BzAEAATMB/wIAAf8BAAEzAQABMwEAAWYBAAEz
        AQABmQEAATMBAAHMAQABMwEAAf8BAAH/ATMCAAMzAQACMwFmAQACMwGZAQACMwHMAQACMwH/AQABMwFm
        AgABMwFmATMBAAEzAmYBAAEzAWYBmQEAATMBZgHMAQABMwFmAf8BAAEzAZkCAAEzAZkBMwEAATMBmQFm
        AQABMwKZAQABMwGZAcwBAAEzAZkB/wEAATMBzAIAATMBzAEzAQABMwHMAWYBAAEzAcwBmQEAATMCzAEA
        ATMBzAH/AQABMwH/ATMBAAEzAf8BZgEAATMB/wGZAQABMwH/AcwBAAEzAv8BAAFmAwABZgEAATMBAAFm
        AQABZgEAAWYBAAGZAQABZgEAAcwBAAFmAQAB/wEAAWYBMwIAAWYCMwEAAWYBMwFmAQABZgEzAZkBAAFm
        ATMBzAEAAWYBMwH/AQACZgIAAmYBMwEAA2YBAAJmAZkBAAJmAcwBAAFmAZkCAAFmAZkBMwEAAWYBmQFm
        AQABZgKZAQABZgGZAcwBAAFmAZkB/wEAAWYBzAIAAWYBzAEzAQABZgHMAZkBAAFmAswBAAFmAcwB/wEA
        AWYB/wIAAWYB/wEzAQABZgH/AZkBAAFmAf8BzAEAAcwBAAH/AQAB/wEAAcwBAAKZAgABmQEzAZkBAAGZ
        AQABmQEAAZkBAAHMAQABmQMAAZkCMwEAAZkBAAFmAQABmQEzAcwBAAGZAQAB/wEAAZkBZgIAAZkBZgEz
        AQABmQEzAWYBAAGZAWYBmQEAAZkBZgHMAQABmQEzAf8BAAKZATMBAAKZAWYBAAOZAQACmQHMAQACmQH/
        AQABmQHMAgABmQHMATMBAAFmAcwBZgEAAZkBzAGZAQABmQLMAQABmQHMAf8BAAGZAf8CAAGZAf8BMwEA
        AZkBzAFmAQABmQH/AZkBAAGZAf8BzAEAAZkC/wEAAcwDAAGZAQABMwEAAcwBAAFmAQABzAEAAZkBAAHM
        AQABzAEAAZkBMwIAAcwCMwEAAcwBMwFmAQABzAEzAZkBAAHMATMBzAEAAcwBMwH/AQABzAFmAgABzAFm
        ATMBAAGZAmYBAAHMAWYBmQEAAcwBZgHMAQABmQFmAf8BAAHMAZkCAAHMAZkBMwEAAcwBmQFmAQABzAKZ
        AQABzAGZAcwBAAHMAZkB/wEAAswCAALMATMBAALMAWYBAALMAZkBAAPMAQACzAH/AQABzAH/AgABzAH/
        ATMBAAGZAf8BZgEAAcwB/wGZAQABzAH/AcwBAAHMAv8BAAHMAQABMwEAAf8BAAFmAQAB/wEAAZkBAAHM
        ATMCAAH/AjMBAAH/ATMBZgEAAf8BMwGZAQAB/wEzAcwBAAH/ATMB/wEAAf8BZgIAAf8BZgEzAQABzAJm
        AQAB/wFmAZkBAAH/AWYBzAEAAcwBZgH/AQAB/wGZAgAB/wGZATMBAAH/AZkBZgEAAf8CmQEAAf8BmQHM
        AQAB/wGZAf8BAAH/AcwCAAH/AcwBMwEAAf8BzAFmAQAB/wHMAZkBAAH/AswBAAH/AcwB/wEAAv8BMwEA
        AcwB/wFmAQAC/wGZAQAC/wHMAQACZgH/AQABZgH/AWYBAAFmAv8BAAH/AmYBAAH/AWYB/wEAAv8BZgEA
        ASEBAAGlAQADXwEAA3cBAAOGAQADlgEAA8sBAAOyAQAD1wEAA90BAAPjAQAD6gEAA/EBAAP4AQAB8AH7
        Af8BAAGkAqABAAOAAwAB/wIAAf8DAAL/AQAB/wMAAf8BAAH/AQAC/wIAA/8BAAJWAVUCTwFWEE8DVQFP
        A1UOVgRVCFYCVQdWwAACVgFPBVYBVQ1PA1YCUQFWCVABVgNQAVYFVRFWwAAGVhBPAVUBVgFRAUoBcgGX
        AXIBlwFyAZcIcgJWAk8DVQZWAlUDVgFVBVbAAAFVClYETwFWBVcEVgJQAVYBUAFWAVABVgFQBVYBVxZW
        AlcBVsAADlYBUANWAVcDVgNQAVYBeAEIAewBEgJQBFYIVwZWAlcBNgJXBVYEV8AADVYBUAFEAUsEUAFJ
        AQ8BbQG8AQ8BQwFyAe0DZgESAVAPVgNQAVYDVwlWwAABCAJQBlYBTwFxAmwBTwFEAUsBSgFPAVACbgTv
        AbwBUAFKAewBvAHwAZkBFAJDAUoBRANKA0kDSgFEAW0BkgHwARsB6wNKA0kGUMAAAfYB9AHzARwEUAFP
        AosCswGLAewBuwGSAUQBSwJFAbwBFAEOAeoBBwFDAUoBcwGZAXkBmQFLAUQBSwFRAUsDSgFEAUsBRAJL
        AXMBBwHzAfYB9AHsARQBEwIVAkQBFQHqAfcBvAEHAbwBCMAAAfQB9gH0AQgB8AHxARsB7wGLAbMBtAHr
        AWYBswHqAUYBbgL3ARoB7AFuAe8C7AHrAWYB6gHvARwBeQF0AVIBSwFKAUsDcwFuA0oBbgHtAe8D9wHr
        Aa4BuwGRARIBQwFEAUsBSgETAYwB6wHzAvbAAAH0BvYB9AGLAbQB7QGTARMCiwFFAUwBbgGSAkwBbgG8
        AewBZgHsAZkBeQHwAfMBGgF5AXoBUgFLAlIBmQFtARIBbAGuApEB9wG7AQgBuwGRAa4CuwH3Ae0BEgFE
        AUsBRAFtAa4BhgHvAvbAAAH0AfMC9gHDAqABwwH3Ae8BBwH3ARMBrgKzAW0BRgGTARoBdAFuAXMB8gEH
        ARoBmQFSAUwCdAFLAXoBUgF5ARsCHAHrAZEBuwEIAfEBCAK7AfcBkQFsAbsB8QG7AfIB9gHyAZIB7QEH
        AbwCZgHvAvbAAAIbAfMB9gEbAeUBoAEbAbwBkgKRAbQBiwGuAbQBswFFAW4BvAEHAUsBcwH0AW4BdAGa
        AXkBSwF5AaABHAFzAXkBHAHsAZkB7QGLAbUBuwGuAWYBbAS7Aa4BCAG7AfMH9gIHA/bAAAEbAcMDGwHD
        AhsBmQJSAW4BswG5AYsBrgFtAQcCvAEbAksBmQElAUUBdAF6AVEBmQF0AUsB9wK7AfcBmgHrAmcBjAKu
        AfAB8wEbAfEB8AK8ARsN9sAACRsBdAFSAksCkQFLARIB6wGTAQcBHAFLAUUBSwFFAUwDmQFLAUUB6gH3
        AQkBuwHtARwBZwGMAY0CrwEHAvYB9AHvAm4BcwEHDfbAAAXCBBsBmQGgApkBdANSARIB7AEHAW4CJQFG
        AUsBJQFGAZMBGgF0AUwB7AGRA7sBkQGMAY0CrwH3AvYB8wFLBSQBbgEbC/bAAALCAQgBuwEIAsIBmQFL
        ARwBcwEcARoBmQFzAVEBcwEHAeoB7AFuASQBJQFLAbwDdAJMAUUB6wGRA7sBrgGMA68B7wEHAbwBHAFF
        ASQBRgFLAkwBRQHvC/bAAAEbAcIBtAG6AQgBwgEcAkUCkwFuARwCmQGYAfcBtAGRARIBbQHrAUYBTAHt
        AW4BvAF0AUwBRgFFAhwB7wEHAe8B9wGMA68BjAGNARwBcwFFAkwBUgJMAUsBvAv2wAABwgEIA8IBCAFL
        AUUBkwG8ARoBkwEaAQgBwgQbAewBtAG1AesBbgFMAXQBbgFMAkYBSwEcAXQBHAHvAfEB7wGvAo0B7AGN
        AfcB7wHwAUsCTAJTAUwBSwH0C/bAAAHCBJ8BcwIfAUQBBwEaAbwB7wGZBcIBCAH3AesBHAGZAnQBSwEl
        AUUBdAGTAXMCmQHzAfYB8wHvAfcBHAKZARoB9AH2ARsBkwJMAXQBkwEbDPbAAAEIBJ8BdAIgAR8BkwFu
        AkUBHAQIARwBmQGTAW8EkwEcAZkBbgFzApkBHAGZARwBGwL2AZkBcwGZAaABcwGZARoBGxL2wAABCAKZ
        AZMCmQIgAUYBbwFFAekBHwFuAwgBmAFKAUQBRgFvBJMBHAEUARUBdAKZAm4BRAHvAvYBeQFRAZkBwwGZ
        ARoBmQEcARsR9sAAAp8BmQFvAZkBCAFuASABHwFAAZMBbwFFAZkBnwGZAXgBmQEcAkoBUQGZA6ABmQFD
        ARUBFAFKAW4BFQJDAewB8QFtAUoBUgFRAXQBcwGZARwCUQEbEPbAAAGfBpkBbwLpAUsBHAOZAwgBnwFz
        AUoBnwSgAZkBRAHsAm0CFAEVARQBCAEbAfABHAFRAV4BWAFRAXMBWAFeAVgBvBD2wAAImQGYBZkBdAWZ
        AUoBeQN0AZkBeQFuAe8B6gEVAkMB6wEIBBsB7QEVAlEBWAGgAX4BmQH0EPbAAA6ZAXkFmQNzAUoBSwJz
        ARwGCAUbAe8BEQIPAUQBSwEHEvbAAA6ZAW8DmQOfAZkBHAFKAUQBHAMIBcIEGwHDAhsBHALsAe8T9sAA
        DpkBTAKZAQgCmQFtAUoBSwJEAUsBcwGZBAgEwgkbE/bAABOZARMBQwJKAksBSgFEAUMBmQGfBAgFwggb
        AfQQ9sAAE5kBFAEOAUQDSwFKARABCwFzAQgDnwQIARsDwggbD/bAABOZAesBDwEQAUMCRAEiAQ8BEQEc
        AQgDnwUIBMIIGw72wAATmQGYAhUBSgHrARwB6gERAeoBmQSfBggBGwTCBBsBwwMbDPbAAAyYCZkB6gIP
        AW0B6wGYA5kBCAOZAZ8CCAGfBQgBGwLCBxsC9An2wAARmAWZApgKmQefAwgBGwPCBBsBwwIbAfMI9sAA
        EJgQmQEIApkCnwEIA58FCAPCCBsH9sAAAZgdmQmfAwgJwgMbAcMDGwH0BfbAABSYE5kBCAWfAwgDwggb
        BfbAABCYAXMBcgF4AXICcwFtAXgBcwGYAXIBbQF4AW0CcwFyAXgB6wFzAXIDcwEcAp8BHAFyAXMC6wII
        AsIIGwHzA/bAABCYA3gBcgJ4AXMBmAF4AZgBcwFyAZgBcgJ4AXMBeAFzAngBcwGYAXMBmAKfAZgBcwGY
        AnMBnwEIBMIIGwL2wAAZmQF5AZkBeQGZAXkLmQWfBQgEwgUbAcMDG8AAApkPmAiZAUsBMQFRAVIBUQFS
        AVEEUgJRAVIBSwGZB58ECATCBBsDwwEbwAABmRaYApkBSwFYAVEBWAFSAVgBUQFYAVkCWAJRAVkBUgKZ
        Cp8CCAXCBRvAAAGZFZgDmQF5A3gCeQF4CHkGmQifAggEwgQbwAABmQGYApkCmAKZDZgBmQGYAngNmQGY
        AXgGmQmfAwgEwgIbwAAQmQF4AZkBeAKYAXMBHAGSAewCcwEcAXMCmAKZARwCcwEcAZgBHAHtAewBHAKY
        AXMBmAGZAZgBmQSfBggDwgIbwAAQmAFtAXMBHAHrAXMB6wFtARwB7AHrAewBHAHrARwCcwGZAXMB7AEc
        AesBHALrAeoB6wEcAe0B6wHsAesB7AEcBJkGnwMIAsLAAASYAXgBmAR4BpgB6wHtAewBcwMcAZgBHAGY
        ARwBmQEcAZgB7AHtAZkBHAHrAXMCHAGYAhwB6wKZAe0BHAHrAe0HmQefAQgBwsAAAZgBmQ+YARwC7wGY
        ARwDmAH3A+8BmAKZAZgBmQEcAXgB9wTvAfcD7wGYB5kJnwEIAcLAABGZARwBBwG1AYsBzwG1Au8BzwGG
        AbUBvAGSBZkBmAEHAoYBtQGGBK4BtQH3AZkOnwEIAcLAAAGYAZkQmAH3ArUBhgGFAYYBhQGGArUB7wEc
        BJgBmQGYAQcBhgGLAbUBBAGuAs8ChgH3CZkIn8AAEpgB7wGGAaYBtQHPAYUBzwG1AoYBvAHtBZgB7QHw
        AYYBiwEHAc8ErgG1Ae8KmQefwAASmAH3Ac8BhgGuAYYBhQGGAc8ChgHvAZgBmQSYAe0BtQGGAc8BvAKG
        ArUBBAG0AfcRmcAADpkCmAGZAZgB7wG1AYsBrgG1Ac8BtQHPAYsBtQEHARwFmQHtAbwCtQG8AYsBhQG0
        ArUBvAHtC5kGn8AABpkBmAGZApgHmQGYAfcCtQHPBLUBzwG1Ae8BkgWZAZgB9wK1AQcFzwG1Ae8BmAyZ
        BJ/AAAeYAXgCVgGXAXgImAIcGZgGmQGYAXgCVgGYBpnAAAaYAXgGVgJ4HpgBmQOYAZkBmAF4AZcFVgF4
        BZnAAAGZApgCmQF4AXIEUAVWAZcDeAKYF5kBmAN4ClYBeASZwAAFmQGYAXIBmAEIAZgCeAGYCVYClwd4
        A5gIeAGXEVYBeAOZwAADmAF4AfMBCAEbAQcB8wEIAfMBCAH0AZcIVgFQA1YBUAVWAVAdVgGYAZnAAAKY
        AZcBeAGSAfABkgHwARwB8AEcAfAB9wGYAlYCSQFQAVYBUAFDAUkBTwFWAVABEQFDAU8BVgFPAREBQwFP
        AVYBUAERAUMBTwFWAU8BEQJJAVYBUAJJAU8OVgF4wAABmAJWAXgBmAG8AggBHAMIAZgBeAJWA08BVgFQ
        AkkBTwFWAVABSQJPAVYBUAJJAU8CVgFJAk8BVgFQAUkCTwFWAVABSQJPD1bAAARWAngCmAFzApgCeDNW
        wAAFVgF4AVADTwFQAZg0VsAACFYBUDdWwABAVsAAAUIBTQE+BwABPgMAASgEAAEBAgABQAMAAQEBAAEB
        BgABCBYAA///AP8A/wD/AP8A/wD/AP8ACQAL
</value>
  </data>
</root>